import React from 'react';

const DxfPreview = ({ inputText, selectedFont, selectedLayout, showDimensions, isWatermarkApplied }) => {
  let layoutStyle = {};
  if (selectedLayout === 'Arched') {
    layoutStyle = { transform: 'rotateX(30deg) translateY(-10px)', textShadow: '2px 2px #ccc' };
  } else if (selectedLayout === 'Circular') {
    layoutStyle = { transform: 'rotate(5deg) scale(0.9)', letterSpacing: '0.1em' };
  } else if (selectedLayout === 'Stacked') {
    layoutStyle = { lineHeight: '1.2', display: 'flex', flexDirection: 'column', alignItems: 'center' };
  }

  const lines = inputText.split('\n').filter(line => line.trim() !== '');

  return (
    <div className="w-full h-full p-8 relative bg-white border border-gray-200 rounded-xl shadow-inner flex flex-col justify-center items-center overflow-hidden">
      <div className={`p-10 border-4 border-dashed border-gray-300 w-full h-full max-w-xl max-h-xl flex justify-center items-center transition-all duration-500`} style={{ fontFamily: selectedFont, ...layoutStyle }}>
        {showDimensions && (
          <>
            <div className="absolute top-4 left-4 text-xs text-gray-500">W: 600mm</div>
            <div className="absolute bottom-4 right-4 text-xs text-gray-500">H: 250mm</div>
          </>
        )}

        <div className="text-black text-center font-extrabold text-4xl sm:text-6xl" style={{WebkitTextStroke: '1px black', color: 'transparent', transition: 'all 0.5s'}}>
          {lines.map((line, index) => (
            <div key={index} style={{whiteSpace: 'pre-wrap'}}>{line.toUpperCase()}</div>
          ))}
        </div>
      </div>

      {isWatermarkApplied && (
        <div className="absolute bottom-2 right-2 text-xs font-mono text-blue-300 opacity-70">
          *Generated by DXF Generator | {new Date().getFullYear()}
        </div>
      )}
    </div>
  );
};

export default DxfPreview;
